START TRAINING DENOISER AT:  173329926848267
Training Denoiser. Epoch: 0
/home/nxhoang/Work/HPE/venv/lib/python3.8/site-packages/torch/nn/modules/loss.py:535: UserWarning: Using a target size (torch.Size([128, 3, 136, 32])) that is different to the input size (torch.Size([128, 3, 138, 34])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Traceback (most recent call last):
  File "/tmp/ipykernel_56372/2556026275.py", line 41, in training
    trainer_ae.train_epoch()
  File "/tmp/ipykernel_56372/2642609474.py", line 27, in train_epoch
    loss = self.criterion(predict, label)
  File "/home/nxhoang/Work/HPE/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nxhoang/Work/HPE/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nxhoang/Work/HPE/venv/lib/python3.8/site-packages/torch/nn/modules/loss.py", line 535, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/home/nxhoang/Work/HPE/venv/lib/python3.8/site-packages/torch/nn/functional.py", line 3328, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/nxhoang/Work/HPE/venv/lib/python3.8/site-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (34) must match the size of tensor b (32) at non-singleton dimension 3